user nginx;
error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;  

    sendfile on; # ファイル送信を最適化するための設定。カーネル空間からユーザー空間へのコピーを省略し、直接ネットワークにファイルを送信することで効率化します。
    keepalive_timeout 65;

    server {
        listen 80;
        server_name api localhost;
        # HTTPからHTTPSへのリダイレクト
        return 301 https://$host$request_uri;
    }

    server {
        # ポート番号
        listen 443 ssl;
        server_name api localhost;

        # SSL証明書の設定
        ssl_certificate /etc/nginx/certificate.crt;
        ssl_certificate_key /etc/nginx/private.key;

        # セキュリティヘッダーの設定
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header Content-Security-Policy "default-src 'self';";

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }   

        # WebSocketの設定
        location /api/sync/ {
            proxy_pass http://api:8080; # WebSocketサーバーのアドレス
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 通常のAPIリクエストの設定
        location /api/ {
            proxy_pass http://api:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}